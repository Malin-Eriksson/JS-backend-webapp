{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateProductSection = () => {\n  _s();\n  const [updateProduct, setUpdateProduct] = useState(false);\n  const [updatefailed, setUpdateFailed] = useState(false);\n  const handleDeleteProduct = async _id => {\n    setUpdateProduct(false);\n    setUpdateFailed(false);\n    const result = await fetch(`http://localhost:5000/api/products/${_id}`, {\n      method: 'delete',\n      headers: {\n        'Content-type': 'application/json',\n        'authorization': `Bearer ${localStorage.getItem('accessToken')}`\n      },\n      body: JSON.stringify([])\n    });\n    if (result.status === 200) {\n      setDeleteProduct(true);\n    } else {\n      setDeleteProduct(false);\n      setDeleteFailed(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(UpdateProductSection, \"KPLK5sLpUgGK/Q3k6l6Toy7HJtA=\");\n_c = UpdateProductSection;\nexport default UpdateProductSection;\nvar _c;\n$RefreshReg$(_c, \"UpdateProductSection\");","map":{"version":3,"names":["React","useState","UpdateProductSection","updateProduct","setUpdateProduct","updatefailed","setUpdateFailed","handleDeleteProduct","_id","result","fetch","method","headers","localStorage","getItem","body","JSON","stringify","status","setDeleteProduct","setDeleteFailed"],"sources":["C:/Users/sangs/Documents/Webbutvecklare inom .NET/Javascript backend/Inl√§mningsuppgift javascript backend/webapp/src/sections/UpdateProductSection.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { ProductItem } from '../models/ProductModels'\r\n\r\ninterface UpdateProductType {\r\n  item: ProductItem\r\n}\r\n\r\nconst UpdateProductSection: React.FC<UpdateProductType> = () => {\r\n\r\n  const [updateProduct, setUpdateProduct] = useState<boolean>(false)\r\n  const [updatefailed, setUpdateFailed] = useState<boolean>(false)\r\n\r\n  const handleDeleteProduct = async (_id: string) => {\r\n    setUpdateProduct(false)\r\n    setUpdateFailed(false)\r\n\r\n    const result = await fetch(`http://localhost:5000/api/products/${_id}`, {\r\n      method: 'delete',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'authorization': `Bearer ${localStorage.getItem('accessToken')}`\r\n      },\r\n      body: JSON.stringify([])\r\n    })\r\n\r\n    if (result.status === 200) {\r\n      setDeleteProduct(true)\r\n  } else {\r\n      setDeleteProduct(false)\r\n      setDeleteFailed(true)\r\n  }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UpdateProductSection"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAQvC,MAAMC,oBAAiD,GAAG,MAAM;EAAA;EAE9D,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGH,QAAQ,CAAU,KAAK,CAAC;EAClE,MAAM,CAACI,YAAY,EAAEC,eAAe,CAAC,GAAGL,QAAQ,CAAU,KAAK,CAAC;EAEhE,MAAMM,mBAAmB,GAAG,MAAOC,GAAW,IAAK;IACjDJ,gBAAgB,CAAC,KAAK,CAAC;IACvBE,eAAe,CAAC,KAAK,CAAC;IAEtB,MAAMG,MAAM,GAAG,MAAMC,KAAK,CAAE,sCAAqCF,GAAI,EAAC,EAAE;MACtEG,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE;MACjE,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,EAAE;IACzB,CAAC,CAAC;IAEF,IAAIR,MAAM,CAACS,MAAM,KAAK,GAAG,EAAE;MACzBC,gBAAgB,CAAC,IAAI,CAAC;IAC1B,CAAC,MAAM;MACHA,gBAAgB,CAAC,KAAK,CAAC;MACvBC,eAAe,CAAC,IAAI,CAAC;IACzB;EAEA,CAAC;EAKD,oBACE,qCAEG;AAEP,CAAC;AAAA,GAnCKlB,oBAAiD;AAAA,KAAjDA,oBAAiD;AAqCvD,eAAeA,oBAAoB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}