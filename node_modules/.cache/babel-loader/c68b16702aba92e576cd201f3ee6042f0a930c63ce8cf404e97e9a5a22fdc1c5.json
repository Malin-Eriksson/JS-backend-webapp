{"ast":null,"code":"// Sign up form/ login validation\nexport const validateFirstName = function (value) {\n  let minLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  if (value.length == 0) return `First name is required`;else if (value.length < minLength) return `First name must contain at least ${minLength} characters`;else return '';\n};\nexport const validateLastName = function (value) {\n  let minLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  if (value.length == 0) return `Last name is required`;else if (value.length < minLength) return `Last name must contain at least ${minLength} characters`;else return '';\n};\nexport const validateSignUpEmail = function (value) {\n  let emailRegEx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  if (value.length == 0) return `E-mail address is required`;else if (!emailRegEx.test(value)) return `E-mail must be an valid e-mail address, eg. name@domain.com`;else return '';\n};\nexport const validatePassword = function (value) {\n  let passwordRegEx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n  if (value.length == 0) return `Password is required`;else if (!passwordRegEx.test(value)) return `Password must be at least 8 characters, contain both upper och lowercase letters, and atleast one number and one special character`;else return '';\n};","map":{"version":3,"names":["validateFirstName","value","minLength","length","validateLastName","validateSignUpEmail","emailRegEx","test","validatePassword","passwordRegEx"],"sources":["C:/Users/sangs/Documents/Webbutvecklare inom .NET/Javascript backend/InlÃ¤mningsuppgift javascript backend/webapp/src/scripts/signInValidation.tsx"],"sourcesContent":["\r\n// Sign up form/ login validation\r\nexport const validateFirstName = (value: string, minLength: number = 2) => {\r\n    if (value.length == 0)\r\n        return `First name is required`\r\n    else if (value.length < minLength)\r\n        return `First name must contain at least ${minLength} characters`\r\n    else \r\n        return ''\r\n}\r\n\r\nexport const validateLastName = (value: string, minLength: number = 2) => {\r\n    if (value.length == 0)\r\n        return `Last name is required`\r\n    else if (value.length < minLength)\r\n        return `Last name must contain at least ${minLength} characters`\r\n    else \r\n        return ''\r\n}\r\n\r\nexport const validateSignUpEmail = (value: string, emailRegEx: RegExp = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/) => {\r\n    if (value.length == 0)\r\n        return `E-mail address is required`\r\n    else if (!emailRegEx.test(value))\r\n        return `E-mail must be an valid e-mail address, eg. name@domain.com`\r\n    else \r\n        return ''\r\n}\r\n\r\nexport const validatePassword = (value: string, passwordRegEx: RegExp = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/) => {\r\n    if (value.length == 0)\r\n        return `Password is required`\r\n    else if (!passwordRegEx.test(value))\r\n        return `Password must be at least 8 characters, contain both upper och lowercase letters, and atleast one number and one special character`\r\n    else \r\n        return ''\r\n}\r\n\r\n\r\n"],"mappings":"AACA;AACA,OAAO,MAAMA,iBAAiB,GAAG,UAACC,KAAa,EAA4B;EAAA,IAA1BC,SAAiB,uEAAG,CAAC;EAClE,IAAID,KAAK,CAACE,MAAM,IAAI,CAAC,EACjB,OAAQ,wBAAuB,MAC9B,IAAIF,KAAK,CAACE,MAAM,GAAGD,SAAS,EAC7B,OAAQ,oCAAmCA,SAAU,aAAY,MAEjE,OAAO,EAAE;AACjB,CAAC;AAED,OAAO,MAAME,gBAAgB,GAAG,UAACH,KAAa,EAA4B;EAAA,IAA1BC,SAAiB,uEAAG,CAAC;EACjE,IAAID,KAAK,CAACE,MAAM,IAAI,CAAC,EACjB,OAAQ,uBAAsB,MAC7B,IAAIF,KAAK,CAACE,MAAM,GAAGD,SAAS,EAC7B,OAAQ,mCAAkCA,SAAU,aAAY,MAEhE,OAAO,EAAE;AACjB,CAAC;AAED,OAAO,MAAMG,mBAAmB,GAAG,UAACJ,KAAa,EAAuL;EAAA,IAArLK,UAAkB,uEAAG,2JAA2J;EAC/N,IAAIL,KAAK,CAACE,MAAM,IAAI,CAAC,EACjB,OAAQ,4BAA2B,MAClC,IAAI,CAACG,UAAU,CAACC,IAAI,CAACN,KAAK,CAAC,EAC5B,OAAQ,6DAA4D,MAEpE,OAAO,EAAE;AACjB,CAAC;AAED,OAAO,MAAMO,gBAAgB,GAAG,UAACP,KAAa,EAAqG;EAAA,IAAnGQ,aAAqB,uEAAG,sEAAsE;EAC1I,IAAIR,KAAK,CAACE,MAAM,IAAI,CAAC,EACjB,OAAQ,sBAAqB,MAC5B,IAAI,CAACM,aAAa,CAACF,IAAI,CAACN,KAAK,CAAC,EAC/B,OAAQ,oIAAmI,MAE3I,OAAO,EAAE;AACjB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}