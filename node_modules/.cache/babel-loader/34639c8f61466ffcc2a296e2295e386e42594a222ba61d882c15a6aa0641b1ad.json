{"ast":null,"code":"// Contact form validation\nexport const validateText = function (elementName, value) {\n  let minLength = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;\n  if (value.length == 0) return `${elementName} is required`;else if (value.length < minLength) return `${elementName} must contain at least ${minLength} characters`;else return '';\n};\nexport const validateEmail = function (elementName, value) {\n  let regEx = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  if (value.length == 0) return `${elementName} is required`;else if (!regEx.test(value)) return `${elementName} must be an valid email address, eg. name@domain.com`;else return '';\n};\n\n// Sign up form/ login validation\nexport const validateFirstName = function (value) {\n  let minLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  if (value.length == 0) return `First name is required`;else if (value.length < minLength) return `First name must contain at least ${minLength} characters`;else return '';\n};\nexport const validateLastName = function (value) {\n  let minLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  if (value.length == 0) return `Last name is required`;else if (value.length < minLength) return `Last name must contain at least ${minLength} characters`;else return '';\n};\nexport const validateSignUpEmail = function (value) {\n  let emailRegEx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  if (value.length == 0) return `E-mail address is required`;else if (!emailRegEx.test(value)) return `E-mail must be an valid e-mail address, eg. name@domain.com`;else return '';\n};\nexport const validatePassword = function (value) {\n  let passwordRegEx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n  if (value.length == 0) return `Password is required`;else if (!passwordRegEx.test(value)) return `Password must be at least 8 characters, contain both upper och lowercase letters, and atleast one number and one special character`;else return '';\n};\n\n// Product validation\n// Price validation\nexport const validatePrice = function (value) {\n  let PriceRegEx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /^\\d{1,3}(?:[.,]\\d{3})*(?:[.,]\\d{2})?/;\n  if (value == 0) return `Price is required`;else if (!PriceRegEx.test(value)) return `Price must be a number `;else return '';\n};\n\n// Rating validation\nexport const validateRating = function (value) {\n  let PriceRegEx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /^[1-5]$/;\n  if (!PriceRegEx.test(value)) return `Rating must be number 1-5`;else return '';\n};","map":{"version":3,"names":["validateText","elementName","value","minLength","length","validateEmail","regEx","test","validateFirstName","validateLastName","validateSignUpEmail","emailRegEx","validatePassword","passwordRegEx","validatePrice","PriceRegEx","validateRating"],"sources":["C:/Users/sangs/Documents/Webbutvecklare inom .NET/Javascript backend/InlÃ¤mningsuppgift javascript backend/webapp/src/scripts/validation.tsx"],"sourcesContent":["// Contact form validation\r\nexport const validateText = (elementName: string, value: string, minLength: number = 2) => {\r\n    if (value.length == 0)\r\n        return `${elementName} is required`\r\n    else if (value.length < minLength)\r\n        return `${elementName} must contain at least ${minLength} characters`\r\n    else \r\n        return ''\r\n}\r\n\r\nexport const validateEmail = (elementName: string, value: string, regEx: RegExp = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/) => {\r\n    if (value.length == 0)\r\n        return `${elementName} is required`\r\n    else if (!regEx.test(value))\r\n        return `${elementName} must be an valid email address, eg. name@domain.com`\r\n    else \r\n        return ''\r\n}\r\n\r\n\r\n// Sign up form/ login validation\r\nexport const validateFirstName = (value: string, minLength: number = 2) => {\r\n    if (value.length == 0)\r\n        return `First name is required`\r\n    else if (value.length < minLength)\r\n        return `First name must contain at least ${minLength} characters`\r\n    else \r\n        return ''\r\n}\r\n\r\nexport const validateLastName = (value: string, minLength: number = 2) => {\r\n    if (value.length == 0)\r\n        return `Last name is required`\r\n    else if (value.length < minLength)\r\n        return `Last name must contain at least ${minLength} characters`\r\n    else \r\n        return ''\r\n}\r\n\r\nexport const validateSignUpEmail = (value: string, emailRegEx: RegExp = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/) => {\r\n    if (value.length == 0)\r\n        return `E-mail address is required`\r\n    else if (!emailRegEx.test(value))\r\n        return `E-mail must be an valid e-mail address, eg. name@domain.com`\r\n    else \r\n        return ''\r\n}\r\n\r\nexport const validatePassword = (value: string, passwordRegEx: RegExp = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/) => {\r\n    if (value.length == 0)\r\n        return `Password is required`\r\n    else if (!passwordRegEx.test(value))\r\n        return `Password must be at least 8 characters, contain both upper och lowercase letters, and atleast one number and one special character`\r\n    else \r\n        return ''\r\n}\r\n\r\n// Product validation\r\n    // Price validation\r\n    export const validatePrice = (value: number, PriceRegEx: RegExp = /^\\d{1,3}(?:[.,]\\d{3})*(?:[.,]\\d{2})?/) => {\r\n        if (value == 0)\r\n            return `Price is required`\r\n        else if (!PriceRegEx.test(value))\r\n            return `Price must be a number `\r\n        else \r\n            return ''\r\n    }\r\n\r\n    // Rating validation\r\n    export const validateRating = (value: number, PriceRegEx: RegExp = /^[1-5]$/) => {\r\n        if (!PriceRegEx.test(value))\r\n            return `Rating must be number 1-5`\r\n        else \r\n            return ''\r\n    }"],"mappings":"AAAA;AACA,OAAO,MAAMA,YAAY,GAAG,UAACC,WAAmB,EAAEC,KAAa,EAA4B;EAAA,IAA1BC,SAAiB,uEAAG,CAAC;EAClF,IAAID,KAAK,CAACE,MAAM,IAAI,CAAC,EACjB,OAAQ,GAAEH,WAAY,cAAa,MAClC,IAAIC,KAAK,CAACE,MAAM,GAAGD,SAAS,EAC7B,OAAQ,GAAEF,WAAY,0BAAyBE,SAAU,aAAY,MAErE,OAAO,EAAE;AACjB,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,UAACJ,WAAmB,EAAEC,KAAa,EAAkL;EAAA,IAAhLI,KAAa,uEAAG,2JAA2J;EACzO,IAAIJ,KAAK,CAACE,MAAM,IAAI,CAAC,EACjB,OAAQ,GAAEH,WAAY,cAAa,MAClC,IAAI,CAACK,KAAK,CAACC,IAAI,CAACL,KAAK,CAAC,EACvB,OAAQ,GAAED,WAAY,sDAAqD,MAE3E,OAAO,EAAE;AACjB,CAAC;;AAGD;AACA,OAAO,MAAMO,iBAAiB,GAAG,UAACN,KAAa,EAA4B;EAAA,IAA1BC,SAAiB,uEAAG,CAAC;EAClE,IAAID,KAAK,CAACE,MAAM,IAAI,CAAC,EACjB,OAAQ,wBAAuB,MAC9B,IAAIF,KAAK,CAACE,MAAM,GAAGD,SAAS,EAC7B,OAAQ,oCAAmCA,SAAU,aAAY,MAEjE,OAAO,EAAE;AACjB,CAAC;AAED,OAAO,MAAMM,gBAAgB,GAAG,UAACP,KAAa,EAA4B;EAAA,IAA1BC,SAAiB,uEAAG,CAAC;EACjE,IAAID,KAAK,CAACE,MAAM,IAAI,CAAC,EACjB,OAAQ,uBAAsB,MAC7B,IAAIF,KAAK,CAACE,MAAM,GAAGD,SAAS,EAC7B,OAAQ,mCAAkCA,SAAU,aAAY,MAEhE,OAAO,EAAE;AACjB,CAAC;AAED,OAAO,MAAMO,mBAAmB,GAAG,UAACR,KAAa,EAAuL;EAAA,IAArLS,UAAkB,uEAAG,2JAA2J;EAC/N,IAAIT,KAAK,CAACE,MAAM,IAAI,CAAC,EACjB,OAAQ,4BAA2B,MAClC,IAAI,CAACO,UAAU,CAACJ,IAAI,CAACL,KAAK,CAAC,EAC5B,OAAQ,6DAA4D,MAEpE,OAAO,EAAE;AACjB,CAAC;AAED,OAAO,MAAMU,gBAAgB,GAAG,UAACV,KAAa,EAAqG;EAAA,IAAnGW,aAAqB,uEAAG,sEAAsE;EAC1I,IAAIX,KAAK,CAACE,MAAM,IAAI,CAAC,EACjB,OAAQ,sBAAqB,MAC5B,IAAI,CAACS,aAAa,CAACN,IAAI,CAACL,KAAK,CAAC,EAC/B,OAAQ,oIAAmI,MAE3I,OAAO,EAAE;AACjB,CAAC;;AAED;AACI;AACA,OAAO,MAAMY,aAAa,GAAG,UAACZ,KAAa,EAAkE;EAAA,IAAhEa,UAAkB,uEAAG,sCAAsC;EACpG,IAAIb,KAAK,IAAI,CAAC,EACV,OAAQ,mBAAkB,MACzB,IAAI,CAACa,UAAU,CAACR,IAAI,CAACL,KAAK,CAAC,EAC5B,OAAQ,yBAAwB,MAEhC,OAAO,EAAE;AACjB,CAAC;;AAED;AACA,OAAO,MAAMc,cAAc,GAAG,UAACd,KAAa,EAAqC;EAAA,IAAnCa,UAAkB,uEAAG,SAAS;EACxE,IAAI,CAACA,UAAU,CAACR,IAAI,CAACL,KAAK,CAAC,EACvB,OAAQ,2BAA0B,MAElC,OAAO,EAAE;AACjB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}