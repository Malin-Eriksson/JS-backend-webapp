{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sangs\\\\Documents\\\\Webbutvecklare inom .NET\\\\Javascript backend\\\\Inl\\xE4mningsuppgift javascript backend\\\\webapp\\\\src\\\\sections\\\\UpdateProductSection.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateProductSection = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"UpdateProductSection\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = UpdateProductSection;\nexport default UpdateProductSection;\n\n// import React, { useState } from 'react'\n// import FormNotification from '../components/FormNotification'\n// import { currencyFormatter } from '../components/utilities/currencyFormatter'\n// import { ProductItem } from '../models/ProductModels'\n// import { validateText } from '../scripts/validation'\n\n// interface UpdateProductType {\n//   name: string,\n//   description?: string,\n//   price: number,\n//   category: string,\n//   tag?: string, \n//   imageName: string,\n//   rating?: number   \n// }\n\n// // interface ItemType {\n// //   item: ProductItem\n// // }\n\n// // interface UpdateProductType {\n// //   name: string,\n// //   description?: string,\n// //   price: number,\n// //   category: string,\n// //   tag?: string, \n// //   imageName: string,\n// //   rating?: number   \n// // }\n\n// const UpdateProductSection: React.FC = () => {\n//   const updateProduct_default: UpdateProductType = { name: '', description: '', price: 0, category: '', tag: '', imageName: '', rating: 0 }\n//   const [updateProductData, setUpdateProductData] = useState<UpdateProductType>(updateProduct_default)\n//   const [updateProduct, setUpdateProduct] = useState<boolean>(false)\n//   const [updateFailed, setUpdateFailed] = useState<boolean>(false)\n\n//   const handleUpdateProductChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const {id, value} = e.target\n//     setUpdateProductData({...updateProductData, [id]: value})\n\n//     if (id === 'name')\n//     setUpdateProductErrors({...updateProductErrors, [id]: validateText(id, value)})\n\n//   if (id === 'description')\n//     setUpdateProductErrors({...updateProductErrors, [id]: validateText(id, value)})\n\n//   // if (id === 'price')\n//   //   setCreateProductErrors({...createProductErrors, [id]: validatePrice(id, value)})\n\n//   if (id === 'category')\n//     setUpdateProductErrors({...updateProductErrors, [id]: validateText(id, value)})\n\n//   if (id === 'tag')\n//     setUpdateProductErrors({...updateProductErrors, [id]: validateText(id, value)})\n\n//   if (id === 'imageName')\n//     setUpdateProductErrors({...updateProductErrors, [id]: validateText(id, value)})\n\n//   // if (id === 'rating')\n//   //   setCreateProductErrors({...createProductErrors, [id]: validateRating(id, value)})\n\n//   }\n\n//     const handleUpdateProduct = async (e: React.FormEvent) => {\n//       e.preventDefault()\n//       setUpdateProduct(false)\n//       setUpdateFailed(false)\n\n//     const result = await fetch(`http://localhost:5000/api/products/update`, {\n//       method: 'put',\n//       headers: {\n//         'Content-type': 'application/json',\n//         'authorization': `Bearer ${localStorage.getItem('accessToken')}`\n//       },\n//     })\n\n//     if (result.status === 200) {\n//       setUpdateProduct(true)\n//     } else {\n//         setUpdateProduct(false)\n//         setUpdateFailed(true)\n//       }\n\n//   }\n\n//     return (\n//       <>\n//       <section className='updateProduct'>\n//         <div className='container'>\n\n//           {updateProduct ? (<FormNotification notificationType='success' title='Product updated' text=''/>) : (<></>)}\n//           {updateFailed ? (<FormNotification notificationType='danger' title='Something went wrong!' text=\"We couln't update the product - please try again later!\"/>) : (<></>)}\n\n//           <form onSubmit={handleUpdateProduct} noValidate>\n//             <div>\n//               <img src={/*item.imageName*/} />    \n//             </div>\n//             <h3>Product name</h3>\n//             <input id=\"name\" value={updateProductData.name} onChange={(e) => handleUpdateProductChange(e)} type='text' /*placeholder={item.name}*//>\n//             <h3>Description</h3>\n//             <input id=\"description\" value={updateProductData.description} onChange={(e) => handleUpdateProductChange(e)} type='text' /*placeholder={item.description}*//> \n//             <h3>Price</h3>\n//             <input id=\"price\" value={updateProductData.price} onChange={(e) => handleUpdateProductChange(e)} type='text' /*placeholder={String(item.price)}*//> \n//             <h3>Category</h3>\n//             <input id=\"category\" value={updateProductData.category}  onChange={(e) => handleUpdateProductChange(e)} type='text' /*placeholder={item.category}*//>  \n//             <h3>Tag</h3>\n//             <input id=\"tag\" value={updateProductData.tag} onChange={(e) => handleUpdateProductChange(e)} type='text' /*placeholder={item.tag}*//> \n//             <h3>Image name</h3>\n//             <input id=\"imageName\" value={updateProductData.imageName} onChange={(e) => handleUpdateProductChange(e)} type='text' /*placeholder={item.imageName}*//> \n//             <h3>Rating, 1-5</h3>\n//             <input id=\"rating\" value={updateProductData.rating} onChange={(e) => handleUpdateProductChange(e)} type='number' /*placeholder={String(item.rating)}*/ /> \n\n//             <button type='submit'>UPDATE PRODUCT</button>\n\n//           </form>\n//         </div>\n//       </section>\n//       </>\n//     )\n//   }\n\n// export default UpdateProductSection\nvar _c;\n$RefreshReg$(_c, \"UpdateProductSection\");","map":{"version":3,"names":["React","UpdateProductSection"],"sources":["C:/Users/sangs/Documents/Webbutvecklare inom .NET/Javascript backend/InlÃ¤mningsuppgift javascript backend/webapp/src/sections/UpdateProductSection.tsx"],"sourcesContent":["import React from 'react'\r\nimport { ProductItem } from '../models/ProductModels'\r\n\r\ninterface UpdateProductType {\r\n  item: ProductItem\r\n}\r\n\r\nconst UpdateProductSection = () => {\r\n  return (\r\n    <div>UpdateProductSection</div>\r\n  )\r\n}\r\n\r\nexport default UpdateProductSection\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react'\r\n// import FormNotification from '../components/FormNotification'\r\n// import { currencyFormatter } from '../components/utilities/currencyFormatter'\r\n// import { ProductItem } from '../models/ProductModels'\r\n// import { validateText } from '../scripts/validation'\r\n\r\n// interface UpdateProductType {\r\n//   name: string,\r\n//   description?: string,\r\n//   price: number,\r\n//   category: string,\r\n//   tag?: string, \r\n//   imageName: string,\r\n//   rating?: number   \r\n// }\r\n\r\n// // interface ItemType {\r\n// //   item: ProductItem\r\n// // }\r\n\r\n// // interface UpdateProductType {\r\n// //   name: string,\r\n// //   description?: string,\r\n// //   price: number,\r\n// //   category: string,\r\n// //   tag?: string, \r\n// //   imageName: string,\r\n// //   rating?: number   \r\n// // }\r\n\r\n\r\n// const UpdateProductSection: React.FC = () => {\r\n//   const updateProduct_default: UpdateProductType = { name: '', description: '', price: 0, category: '', tag: '', imageName: '', rating: 0 }\r\n//   const [updateProductData, setUpdateProductData] = useState<UpdateProductType>(updateProduct_default)\r\n//   const [updateProduct, setUpdateProduct] = useState<boolean>(false)\r\n//   const [updateFailed, setUpdateFailed] = useState<boolean>(false)\r\n\r\n//   const handleUpdateProductChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n//     const {id, value} = e.target\r\n//     setUpdateProductData({...updateProductData, [id]: value})\r\n\r\n//     if (id === 'name')\r\n//     setUpdateProductErrors({...updateProductErrors, [id]: validateText(id, value)})\r\n\r\n//   if (id === 'description')\r\n//     setUpdateProductErrors({...updateProductErrors, [id]: validateText(id, value)})\r\n\r\n//   // if (id === 'price')\r\n//   //   setCreateProductErrors({...createProductErrors, [id]: validatePrice(id, value)})\r\n\r\n//   if (id === 'category')\r\n//     setUpdateProductErrors({...updateProductErrors, [id]: validateText(id, value)})\r\n\r\n//   if (id === 'tag')\r\n//     setUpdateProductErrors({...updateProductErrors, [id]: validateText(id, value)})\r\n\r\n//   if (id === 'imageName')\r\n//     setUpdateProductErrors({...updateProductErrors, [id]: validateText(id, value)})\r\n\r\n//   // if (id === 'rating')\r\n//   //   setCreateProductErrors({...createProductErrors, [id]: validateRating(id, value)})\r\n\r\n//   }\r\n\r\n//     const handleUpdateProduct = async (e: React.FormEvent) => {\r\n//       e.preventDefault()\r\n//       setUpdateProduct(false)\r\n//       setUpdateFailed(false)\r\n\r\n\r\n\r\n//     const result = await fetch(`http://localhost:5000/api/products/update`, {\r\n//       method: 'put',\r\n//       headers: {\r\n//         'Content-type': 'application/json',\r\n//         'authorization': `Bearer ${localStorage.getItem('accessToken')}`\r\n//       },\r\n//     })\r\n\r\n//     if (result.status === 200) {\r\n//       setUpdateProduct(true)\r\n//     } else {\r\n//         setUpdateProduct(false)\r\n//         setUpdateFailed(true)\r\n//       }\r\n\r\n//   }\r\n\r\n\r\n//     return (\r\n//       <>\r\n//       <section className='updateProduct'>\r\n//         <div className='container'>\r\n\r\n//           {updateProduct ? (<FormNotification notificationType='success' title='Product updated' text=''/>) : (<></>)}\r\n//           {updateFailed ? (<FormNotification notificationType='danger' title='Something went wrong!' text=\"We couln't update the product - please try again later!\"/>) : (<></>)}\r\n\r\n//           <form onSubmit={handleUpdateProduct} noValidate>\r\n//             <div>\r\n//               <img src={/*item.imageName*/} />    \r\n//             </div>\r\n//             <h3>Product name</h3>\r\n//             <input id=\"name\" value={updateProductData.name} onChange={(e) => handleUpdateProductChange(e)} type='text' /*placeholder={item.name}*//>\r\n//             <h3>Description</h3>\r\n//             <input id=\"description\" value={updateProductData.description} onChange={(e) => handleUpdateProductChange(e)} type='text' /*placeholder={item.description}*//> \r\n//             <h3>Price</h3>\r\n//             <input id=\"price\" value={updateProductData.price} onChange={(e) => handleUpdateProductChange(e)} type='text' /*placeholder={String(item.price)}*//> \r\n//             <h3>Category</h3>\r\n//             <input id=\"category\" value={updateProductData.category}  onChange={(e) => handleUpdateProductChange(e)} type='text' /*placeholder={item.category}*//>  \r\n//             <h3>Tag</h3>\r\n//             <input id=\"tag\" value={updateProductData.tag} onChange={(e) => handleUpdateProductChange(e)} type='text' /*placeholder={item.tag}*//> \r\n//             <h3>Image name</h3>\r\n//             <input id=\"imageName\" value={updateProductData.imageName} onChange={(e) => handleUpdateProductChange(e)} type='text' /*placeholder={item.imageName}*//> \r\n//             <h3>Rating, 1-5</h3>\r\n//             <input id=\"rating\" value={updateProductData.rating} onChange={(e) => handleUpdateProductChange(e)} type='number' /*placeholder={String(item.rating)}*/ /> \r\n\r\n//             <button type='submit'>UPDATE PRODUCT</button>\r\n\r\n//           </form>\r\n//         </div>\r\n//       </section>\r\n//       </>\r\n//     )\r\n//   }\r\n\r\n// export default UpdateProductSection"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA;AAOzB,MAAMC,oBAAoB,GAAG,MAAM;EACjC,oBACE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAA+B;AAEnC,CAAC;AAAA,KAJKA,oBAAoB;AAM1B,eAAeA,oBAAoB;;AAMnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}